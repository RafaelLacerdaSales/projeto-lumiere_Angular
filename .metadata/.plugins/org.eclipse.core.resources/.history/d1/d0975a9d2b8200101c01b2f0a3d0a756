package com.lumiere.project.Controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lumiere.project.entities.UsersEntities;
import com.lumiere.project.repositories.UsersRepositories;

@RestController
@RequestMapping("/usuario")
public class UsersControllers {

	@Autowired
	private UsersRepositories repository;

	@GetMapping
	public List<UsersEntities> listUsers() {
		return repository.findAll();
	}

	@CrossOrigin(origins = "http://localhost:4200")
	@PostMapping
	public String criarUsuario(@RequestBody UsersEntities user) {

		try {
			UsersEntities novoUser = repository.save(user);
			// retorno 201 Created + mensagem
			return "cadastro feito com sucesso " + novoUser.getIdUser();
		} catch (Exception e) {
			// retorno 400 Bad Request + mensagem do erro
			return "cadastro não foi concluido devido a " + e.getMessage();
		}
	}

	@CrossOrigin(origins = "http://localhost:4200")
	@DeleteMapping("/{id}")
	public String deletarUsuario(@PathVariable Long id) {
		try {
			repository.deleteById(id);
			return "Usuario deletado com sucesso";
		} catch (Exception e) {
			return "não foi possível deletar o usuario " + e.getMessage();
		}
	}

	@CrossOrigin(origins = "http://localhost:4200")
	@PostMapping("/validar")
	public String validarLogin(@RequestBody UsersEntities user) {
		try {
			 List<UsersEntities> users = repository.findByNome(user.getNome());
			 List<UsersEntities> senha = repository.findBySenha(user.getSenha());
			 
			 for (UsersEntities u : users) {
				if(u.getNome().equals(users)) {
					for (UsersEntities us : senha) {
						if(us.getSenha().equals(senha)) {
							return "cadastro feito com sucesso";
						}
					}
				}
			}
			return "usuario ou senha não encontrados";

		} catch (Exception e) {
			return "Erro não pegou";
		} 
	}

}
